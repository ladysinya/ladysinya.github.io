// sass --watch ./jeopardy/style.scss ./jeopardy/style.css --no-source-map
html, body {
    margin: 0;
    height: 100vh;
    width: 100vw;
}

:root {
    --background-image: url(../assets/wallpaperBackground.jpg);
    --font-family: "Outfit", sans-serif;

    --card-background-color: gray;

    --category-card-text-color: white;
    --card-text-color: white;
    --card-text-stroke-color: white;

    --card-border-color: white;
    --score-card-border-color: white;
    --bubble-border-color: white;

    --team-color-red: red;
    --team-color-orange: orange;
    --team-color-yellow: yellow;
    --team-color-green: green;
    --team-color-blue: blue;
    --team-color-purple: purple;
    --team-color-none: dimgray;
}

[theme="halloween"] {
    --background-image: url(../assets/halloween-shelf-seamless-background.jpg);
    --font-family: "Metal Mania", system-ui;

    --card-background-color: black;

    --team-color-red: brown;
    --team-color-orange: chocolate;
    --team-color-yellow: goldenrod;
    --team-color-green: darkolivegreen;
    --team-color-blue: midnightblue;
    --team-color-purple: rebeccapurple;
}

[theme="christmas"] {
    --background-image: url(../assets/geometric-minimal-scandinavian-christmas-trees-600nw-2353893853.webp);

    --category-card-text-color: green;
    --card-text-color: orangered;
    --card-text-stroke-color: maroon;
    --card-background-color: yellowgreen;
    --card-border-color: green;

    .snow-container {
        display: block;
    }
}


body {
    background-image: var(--background-image);
    font-family: var(--font-family);
}

main {
    display: flex;
    flex-direction: column;
    height: 100%;
}

.teams {
    display: grid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);
    gap: 8px;
    padding: 16px 32px;

}

.team-score {
    border: 3px solid var(--score-card-border-color);
    border-radius: 8px;
    padding: 16px;
    font-size: 32px;
    display: flex;
    justify-content: center;
    gap: 8px;
    
    .team-score-content {
        -webkit-filter: invert(100%);
        filter: invert(100%);
        font-weight: 600;

        &:before {
           content: '$';
       }
    }
}

[data-team-color="red"] {
    background-color: var(--team-color-red) !important;
    color: var(--team-color-red) !important;
}

[data-team-color="orange"] {
    background-color: var(--team-color-orange) !important;
    color: var(--team-color-orange) !important;
}

[data-team-color="yellow"] {
    background-color: var(--team-color-yellow) !important;
    color: var(--team-color-yellow) !important;
}

[data-team-color="green"] {
    background-color: var(--team-color-green) !important;
    color: var(--team-color-green) !important;
}

[data-team-color="blue"] {
    background-color: var(--team-color-blue) !important;
    color: var(--team-color-blue) !important;
}

[data-team-color="purple"] {
    background-color: var(--team-color-purple) !important;
    color: var(--team-color-purple) !important;
}

[data-team-color="none"] {
    background-color: var(--team-color-none) !important;
    color: var(--team-color-none) !important;
}

.board {
    flex: 1;
    display: grid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);
    gap: 8px;
    padding: 16px 32px;
    position: relative;

    .category-container {
        display: grid;
        grid-template-rows: 1fr 1fr 1fr 1fr 1fr 1fr;
        gap: 8px;

        .category-label,
        .card {
            text-align: center;
            background-color: var(--card-background-color);
            border: 3px solid var(--card-border-color);
            border-radius: 8px;
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            justify-content: center;
            align-content: center;  
        }
        
        .category-label{
            font-size: 80px;
            font-weight: 600;
            letter-spacing: 0.25em;
            padding: 16px 4px 16px 16px;
            color: var(--category-card-text-color);
        }

        .card {
            color: var(--card-text-color);
            -webkit-text-stroke: 2px var(--card-text-stroke-color);
            font-weight: 600;
            
            .card-value {
                font-size: 56px;
                
                &:before {
                    content: '$';
                }
            }
            
            &.show-question {
                .card-back .question-text {
                    display: block;
                }
            }
            
            .card-back {
                transform: rotateY(180deg);
                -webkit-text-stroke-width: 0.5px;
                display: none;
                flex-direction: column;
                padding: 32px;
                border-radius: 6px;
                position: relative;
                height: 100%;
                width: 100%;
                justify-content: center;
                box-sizing: border-box;

                .timer {
                    position: absolute;
                    top: 8px;
                    right: 8px;
                }
                
                .answer-text,
                .question-text {
                    font-size: 1.125em;
                    letter-spacing: 0.125em;
                }

                .question-text {
                    display: none;
                    border-top: 1px solid var(--card-text-color);
                    margin-bottom: 48px;
                }
            }

            &.card-open {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%) scale(3.5) rotateY(180deg);
                width: 25%;
                height: 24%;
                transition: transform 1s linear;
                z-index: 1;

                .card-value {
                    display: none;
                    animation: disappear50 1s linear;
                }

                .card-back {
                    display: flex;
                    animation: appear50 1s linear;
                }

                &:has(.daily-double),
                &:has(.final-jeopardy) {
                    .card-back {
                        display: none;
                        animation: none;
                    }
                }

                .daily-double,
                .final-jeopardy {
                    display: block;
                }
            }

            &[data-disabled] {
                .card-value {
                    opacity: 10%;
                    color: var(--card-text-color);
                    pointer-events: none;
                }
            }
        }
    }    
}

.final-jeopardy-wager-values {
    position: absolute;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
    gap: 8px;
    bottom: 60px;
    left: 50%;
    transform: translate(-51%, 0);
    width: 90%;
}

.final-jeopardy-wager-value {
    &::before {
        content:'$';
        margin-right: 4px;
    }
}

.card[data-id="final-jeopardy-card"] {
    .team-bubbles .team-bubble {
        color: white !important;
        -webkit-text-stroke-width: 0;
        min-height: 36px;
        padding: 4px;
        align-items: center;

        &[data-team-color="none"] {
            display: none;
        }

        &:before {
            content: '$';
        }

        &:after {
            content: '?';
        }

        &.show-wager {
            opacity: 1 !important;

            &:after {
                content: attr(data-wager);
            }
        }
    }
}

.team-bubbles {
    position: absolute;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
    gap: 8px;
    bottom: 16px;
    left: 50%;
    transform: translate(-50%, 0);
    
    .team-bubble {
        opacity: 50%;
        aspect-ratio: 1;
        border: 3px solid var(--bubble-border-color);
        border-radius: 50%;
        display: flex;
        box-sizing: border-box;

        .fa-xmark {
            color: white;
            font-size: 2em;
            margin: auto;
        }
    }
}

[data-scoring-team="red"] {
    .team-bubbles .team-bubble[data-team-color="red"] {
        opacity: 100%;
    }
}

[data-scoring-team="orange"] {
    .team-bubbles .team-bubble[data-team-color="orange"] {
        opacity: 100%;
    }
}

[data-scoring-team="yellow"] {
    .team-bubbles .team-bubble[data-team-color="yellow"] {
        opacity: 100%;
    }
}

[data-scoring-team="green"] {
    .team-bubbles .team-bubble[data-team-color="green"] {
        opacity: 100%;
    }
}

[data-scoring-team="blue"] {
    .team-bubbles .team-bubble[data-team-color="blue"] {
        opacity: 100%;
    }
}

[data-scoring-team="purple"] {
    .team-bubbles .team-bubble[data-team-color="purple"] {
        opacity: 100%;
    }
}

[data-scoring-team="none"] {
    .team-bubbles .team-bubble[data-team-color="none"] {
        opacity: 100%;
    }
}

hr {
    margin: 0;
}

.final-jeopardy,
.daily-double {
    display: none;
    transform: rotateY(180deg);
    animation: appear50 1s linear;
    color: var(--card-text-color);
    font-size: 64px;
}

.board .category-container .card:has(.final-jeopardy).card-open .card-back {
    display: none;
}

.board .category-container .card:has(.final-jeopardy) .card-value {
    display: none;
}

.control-card {
    text-align: center;
    background-color: var(--card-background-color);
    color: var(--card-text-color);
    text-shadow: -1px 0 var(--card-text-stroke-color), 0 1px var(--card-text-stroke-color), 1px 0 var(--card-text-stroke-color), 0 -1px var(--card-text-stroke-color);
    border: 3px solid var(--card-border-color);
    border-radius: 8px;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    gap: 8px;
    justify-content: center;
    padding: 16px;

    h1 {
        font-size: 72px;
    }

    select {
        padding: 3px;
        border-radius: 3px;
        margin: auto 0;
        color: var(--card-text-color);
        background-color: dimgray;
        font-family: var(--font-family);
        border: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        font-size: 48px;

        &:active,
        &:focus,
        &:hover {
            outline: none;
        }

        option {
            font-size: 48px;
            color: var(--card-text-color);
            background-color: var(--card-background-color);
        }
    }

    .final-jeopardy-inputs {
        display: grid;
        grid-template-columns: 1fr 1fr;
        grid-template-rows: 1fr 1fr 1fr;
        gap: 16px;
    }

    button {
        font-family: var(--font-family);
        border-radius: 8px;
        color: var(--card-background-color);
        background-color: var(--card-text-color);
        // -webkit-filter: invert(100%);
        // filter: invert(100%);
        border: none;
        font-size: 48px;
    }
}

@keyframes disappear50 {
    0% {
        display: block;
    }
    50% {
        display: none;
    }
    100% {
        display: none;
    }
}

@keyframes appear50 {
    0% {
        display: none;
    }
    50% {
        display: none;
    }
    100% {
        display: flex;
    }
}

  @function random_range($min, $max) {
    $rand: random();
    $random_range: $min + floor($rand * (($max - $min) + 1));
    @return $random_range;
  }
  
  .snow-container {
    display: none;

    width: 100vw;
    height: 100vh;
    overflow: hidden;
    position: absolute;
  }

  .snow {
    $total: 200;
    position: absolute;
    width: 10px;
    height: 10px;
    background: white;
    border-radius: 50%;
    z-index: 10;
  
    @for $i from 1 through $total {
      $random-x: random(1000000) * 0.0001vw;
      $random-offset: random_range(-100000, 100000) * 0.0001vw;
      $random-x-end: $random-x + $random-offset;
      $random-x-end-yoyo: $random-x + calc($random-offset / 2);
      $random-yoyo-time: calc(random_range(30000, 80000) / 100000);
      $random-yoyo-y: $random-yoyo-time * 100vh;
      $random-scale: random(10000) * 0.0001;
      $fall-duration: random_range(10, 30) * 1s;
      $fall-delay: random(30) * -1s;
  
      &:nth-child(#{$i}) {
        opacity: random(10000) * 0.0001;
        transform: translate($random-x, -10px) scale($random-scale);
        animation: fall-#{$i} $fall-duration $fall-delay linear infinite;
      }
  
      @keyframes fall-#{$i} {
        #{percentage($random-yoyo-time)} {
          transform: translate($random-x-end, $random-yoyo-y) scale($random-scale);
        }
  
        to {
          transform: translate($random-x-end-yoyo, 100vh) scale($random-scale);
        }
      }
    }
  }
  